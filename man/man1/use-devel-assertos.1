.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "USE-DEVEL-ASSERTOS 1"
.TH USE-DEVEL-ASSERTOS 1 "2011-07-23" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
use\-devel\-assertos \- a script to package Devel::AssertOS modules
with your code.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script, when run in the directory in which your shiny new module
lives, will bundle whichever Devel::AssertOS modules you ask it to
in the \f(CW\*(C`inc\*(C'\fR directory, and update your Makefile.PL (or Build.PL)
appropriately.  If neither exists, it will create a Makefile.PL.
The \s-1MANIFEST\s0 file is updated if any files are created.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use\-devel\-assertos NetBSD OpenBSD FreeBSD
.Ve
.PP
But note that if you use \f(CW\*(C`Module::Install\*(C'\fR you are encouraged to use
\&\f(CW\*(C`Module::Install::AssertOS\*(C'\fR instead.
.SH "USAGE"
.IX Header "USAGE"
In the example above, this will insert code to make your module
depend on one of the specified OSes, as well as update Makefile.PL /
Build.PL / \s-1MANIFEST\s0.  By default it's rather noisy, but you can
suppress that by passing \-q as the first parameter.
.SH "SUPPORTED PLATFORMS"
.IX Header "SUPPORTED PLATFORMS"
To get a list of supported platforms, do this:
.PP
.Vb 1
\&    use\-devel\-assertos \-l
.Ve
.SH "WARNINGS, BUGS and FEEDBACK"
.IX Header "WARNINGS, BUGS and FEEDBACK"
This script has not been thoroughly tested.  You should check by
hand that it has done what you expected after running it.
.PP
If you use Module::Build::Compat to write a Makefile.PL, then you
will need to re-run this script whenever you have generated a new
Makefile.PL.
.PP
I welcome feedback about my code, including constructive criticism.
Bug reports should be made using <http://rt.cpan.org/> or by email.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Devel::AssertOS
.PP
Devel::CheckOS
.PP
Module::Install::AssertOS
.SH "AUTHOR"
.IX Header "AUTHOR"
David Cantrell <\fIdavid@cantrell.org.uk\fR>
.SH "COPYRIGHT and LICENCE"
.IX Header "COPYRIGHT and LICENCE"
Copyright 2007 David Cantrell
.PP
This software is free-as-in-speech software, and may be used, distributed, and modified under the terms of either the \s-1GNU\s0 General Public Licence version 2 or the Artistic Licence. It's up to you which one you use. The full text of the licences can be found in the files \s-1GPL2\s0.txt and \s-1ARTISTIC\s0.txt, respectively.
.SH "CONSPIRACY"
.IX Header "CONSPIRACY"
This software is also free-as-in-mason.
