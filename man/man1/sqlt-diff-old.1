.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "SQLT-DIFF-OLD 1"
.TH SQLT-DIFF-OLD 1 "2014-06-28" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
sqlt\-diff \- find the differences b/w two schemas
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
For help:
.PP
.Vb 1
\&  sqlt\-diff \-h|\-\-help
.Ve
.PP
For a list of all valid parsers:
.PP
.Vb 1
\&  sqlt \-l|\-\-list
.Ve
.PP
To diff two schemas:
.PP
.Vb 1
\&  sqlt\-diff [options] file_name1=parser file_name2=parser
.Ve
.PP
Options:
.PP
.Vb 1
\&  \-d|\-\-debug   Show debugging info
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
sqlt-diff is a utility for creating a file of \s-1SQL\s0 commands necessary to
transform the first schema provided to the second.  While not yet
exhaustive in its ability to mutate the entire schema, it will report the
following
.IP "\(bu" 4
New tables
.Sp
Using the Producer class of the target (second) schema, any tables missing
in the first schema will be generated in their entirety (fields, constraints,
indices).
.IP "\(bu" 4
Missing/altered fields
.Sp
Any fields missing or altered between the two schemas will be reported
as:
.Sp
.Vb 3
\&  ALTER TABLE <table_name>
\&    [DROP <field_name>]
\&    [CHANGE <field_name> <datatype> (<size>)] ;
.Ve
.IP "\(bu" 4
Missing/altered indices
.Sp
Any indices missing or of a different type or on different fields will be
indicated.  Indices that should be dropped will be reported as such:
.Sp
.Vb 1
\&  DROP INDEX <index_name> ON <table_name> ;
.Ve
.Sp
An index of a different type or on different fields will be reported as a
new index as such:
.Sp
.Vb 2
\&  CREATE [<index_type>] INDEX [<index_name>] ON <table_name>
\&    ( <field_name>[,<field_name>] ) ;
.Ve
.PP
\&\*(L"\s-1ALTER/DROP\s0 \s-1TABLE\s0\*(R" and \*(L"\s-1CREATE\s0 \s-1INDEX\s0\*(R" statements \fBare not\fR generated by
the Producer, unfortunately, and may require massaging before being passed to
your target database.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ken Youens-Clark <kclark@cpan.org>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
SQL::Translator, <http://sqlfairy.sourceforge.net>.
