.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Catalyst::Plugin::Session::Store::DBIC::Delegate 3"
.TH Catalyst::Plugin::Session::Store::DBIC::Delegate 3 "2013-07-27" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Plugin::Session::Store::DBIC::Delegate \- Delegates between the session and flash rows
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class delegates between two rows in your sessions table for a
given session (session and flash).  This is done for compatibility
with Catalyst::Plugin::Session::Store::DBI.
.SH "METHODS"
.IX Header "METHODS"
.SS "session"
.IX Subsection "session"
Return the session row for this delegate.
.SS "flash"
.IX Subsection "flash"
Return the flash row for this delegate.
.SS "_load_row"
.IX Subsection "_load_row"
Load the specified session or flash row from the database. This is a
wrapper around \*(L"find_or_create\*(R" in DBIx::Class::ResultSet to add support
for transactions.
.SS "expires"
.IX Subsection "expires"
Return the expires row for this delegate.  As with
Catalyst::Plugin::Session::Store::DBI, this maps to the \*(L"session\*(R"
row.
.SS "flush"
.IX Subsection "flush"
Update the session and flash data in the backend store.
.SS "_clear_instance_data"
.IX Subsection "_clear_instance_data"
Remove any references held by the delegate.
.SH "AUTHOR"
.IX Header "AUTHOR"
Daniel Westermann-Clark <danieltwc@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2006\-2008 Daniel Westermann-Clark, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
