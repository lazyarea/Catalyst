.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "HTML::FormHandler::Widget::Wrapper::Simple 3"
.TH HTML::FormHandler::Widget::Wrapper::Simple 3 "2014-08-02" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::FormHandler::Widget::Wrapper::Simple \- simple field wrapper
.SH "VERSION"
.IX Header "VERSION"
version 0.40057
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This is the default wrapper role. It will be installed if
no other wrapper is specified and widget_wrapper is not set to
\&'none'.
.PP
Relevant field flags:
.PP
.Vb 2
\&   do_wrapper
\&   do_label
.Ve
.PP
If 'do_label' is set and not 'do_wrapper', only the label plus
the form element will be rendered.
.PP
Supported 'tags', all set via the 'tags' hashref on the field:
.PP
.Vb 1
\&    wrapper_tag    \-\- the tag to use in the wrapper, default \*(Aqdiv\*(Aq
\&
\&    label_tag      \-\- tag to use for label (default \*(Aqlabel\*(Aq)
\&    label_after    \-\- string to append to label, for example \*(Aq: \*(Aq to append a colon
\&
\&    before_element \-\- string that goes right before the element
\&    after_element  \-\- string that goes right after the element
\&
\&    no_errors      \-\- don\*(Aqt issue error messages on the field
\&    error_class    \-\- class for error messages (default \*(Aqerror_message\*(Aq)
\&    warning_class  \-\- class for warning messages (default \*(Aqwarning_message\*(Aq )
\&
\&    no_wrapped_label \-\- for checkboxes. Don\*(Aqt provide an inner wrapped label
\&                        (from Base wrapper)
.Ve
.PP
Example:
.PP
.Vb 1
\&    has_field \*(Aqfoo\*(Aq => ( tags => { wrapper_tag => \*(Aqspan\*(Aq, no_errors => 1 } );
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
FormHandler Contributors \- see HTML::FormHandler
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2014 by Gerda Shank.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
