.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Moose::Meta::Role::Method::Conflicting 3"
.TH Moose::Meta::Role::Method::Conflicting 3 "2014-11-06" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Moose::Meta::Role::Method::Conflicting \- A Moose metaclass for conflicting methods in Roles
.SH "VERSION"
.IX Header "VERSION"
version 2.1402
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.SH "INHERITANCE"
.IX Header "INHERITANCE"
\&\f(CW\*(C`Moose::Meta::Role::Method::Conflicting\*(C'\fR is a subclass of
Moose::Meta::Role::Method::Required.
.SH "METHODS"
.IX Header "METHODS"
.IP "\fBMoose::Meta::Role::Method::Conflicting\->new(%options)\fR" 4
.IX Item "Moose::Meta::Role::Method::Conflicting->new(%options)"
This creates a new type constraint based on the provided \f(CW%options\fR:
.RS 4
.IP "\(bu" 8
name
.Sp
The method name. This is required.
.IP "\(bu" 8
roles
.Sp
The list of role names that generated the conflict. This is required.
.RE
.RS 4
.RE
.ie n .IP "\fB\fB$method\fB\->name\fR" 4
.el .IP "\fB\f(CB$method\fB\->name\fR" 4
.IX Item "$method->name"
Returns the conflicting method's name, as provided to the constructor.
.ie n .IP "\fB\fB$method\fB\->roles\fR" 4
.el .IP "\fB\f(CB$method\fB\->roles\fR" 4
.IX Item "$method->roles"
Returns the roles that generated this conflicting method, as provided to the
constructor.
.ie n .IP "\fB\fB$method\fB\->roles_as_english_list\fR" 4
.el .IP "\fB\f(CB$method\fB\->roles_as_english_list\fR" 4
.IX Item "$method->roles_as_english_list"
Returns the roles that generated this conflicting method as an English list.
.SH "BUGS"
.IX Header "BUGS"
See \*(L"\s-1BUGS\s0\*(R" in Moose for details on reporting bugs.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Stevan Little <stevan.little@iinteractive.com>
.IP "\(bu" 4
Dave Rolsky <autarch@urth.org>
.IP "\(bu" 4
Jesse Luehrs <doy@tozt.net>
.IP "\(bu" 4
Shawn M Moore <code@sartak.org>
.IP "\(bu" 4
יובל קוג'מן (Yuval Kogman) <nothingmuch@woobling.org>
.IP "\(bu" 4
Karen Etheridge <ether@cpan.org>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.IP "\(bu" 4
Hans Dieter Pearcey <hdp@weftsoar.net>
.IP "\(bu" 4
Chris Prather <chris@prather.org>
.IP "\(bu" 4
Matt S Trout <mst@shadowcat.co.uk>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2006 by Infinity Interactive, Inc..
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
