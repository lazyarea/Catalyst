.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Catalyst::Manual::Deployment::SharedHosting 3"
.TH Catalyst::Manual::Deployment::SharedHosting 3 "2013-05-07" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Manual::Deployment::SharedHosting \- Deploying Catalyst on Shared Hosting
.SH "Catalyst on shared hosting"
.IX Header "Catalyst on shared hosting"
So, you want to put your Catalyst application out there for the whole
world to see, but you don't want to break the bank. There is an answer \-
if you can get shared hosting with FastCGI and a shell, you can install
your Catalyst app in a local directory on your shared host. First, run
.PP
.Vb 1
\&    perl \-MCPAN \-e shell
.Ve
.PP
and go through the standard \s-1CPAN\s0 configuration process. Then exit
without installing anything. Next, download the latest local::lib
package and follow its 'bootstrap' instructions to get it installed
and the local configuration added to your \f(CW\*(C`~/.bashrc\*(C'\fR.
.PP
Now log out, then back in again (or run \f(CW". .bashrc"\fR if you
prefer).
.PP
Now you can install the modules you need using \s-1CPAN\s0 as normal; they will
be installed into your local directory, and Perl will pick them up.
Finally, change into the root directory of your virtual host, and
symlink your application's script directory:
.PP
.Vb 2
\&    cd path/to/mydomain.com
\&    ln \-s ~/lib/MyApp/script script
.Ve
.PP
And add the following lines to your .htaccess file (assuming the server
is setup to handle .pl as fcgi \- you may need to rename the script to
myapp_fastcgi.fcgi and/or use a SetHandler directive):
.PP
.Vb 3
\&  RewriteEngine On
\&  RewriteCond %{REQUEST_URI} !^/?script/myapp_fastcgi.pl
\&  RewriteRule ^(.*)$ script/myapp_fastcgi.pl/$1 [PT,L]
.Ve
.PP
Now \f(CW\*(C`http://mydomain.com/\*(C'\fR should now Just Work. Congratulations, now
you can tell your friends about your new website.
.SH "AUTHORS"
.IX Header "AUTHORS"
Catalyst Contributors, see Catalyst.pm
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This library is free software. You can redistribute it and/or modify it under
the same terms as Perl itself.
