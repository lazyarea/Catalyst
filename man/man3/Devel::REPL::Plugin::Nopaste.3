.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Devel::REPL::Plugin::Nopaste 3"
.TH Devel::REPL::Plugin::Nopaste 3 "2014-07-16" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Devel::REPL::Plugin::Nopaste \- #nopaste to upload session's input and output
.SH "VERSION"
.IX Header "VERSION"
version 1.003026
.SH "COMMANDS"
.IX Header "COMMANDS"
This module provides these commands to your Devel::REPL shell:
.SS "#nopaste"
.IX Subsection "#nopaste"
The \f(CW\*(C`#nopaste\*(C'\fR sends a transcript of your session to a nopaste
site.
.SS "#pastetitle"
.IX Subsection "#pastetitle"
The \f(CW\*(C`#pastetitle\*(C'\fR command allows you to set the title of the paste on
the nopaste site. For example:
.PP
\&\f(CW\*(C`#pastetitle example of some code\*(C'\fR
.PP
defaults to \f(CW\*(AqDevel::REPL session\*(Aq\fR.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
.SS "nopaste_format"
.IX Subsection "nopaste_format"
The format sent to the nopaste server can be adjusted with the
\&\f(CW\*(C`nopaste_format\*(C'\fR option. By default, the output of each perl
statement is commented out, and the perl statements themselves are
not. This can be reversed by setting the \f(CW\*(C`nopaste_format\*(C'\fR attribute
to \f(CW\*(C`comment_code\*(C'\fR like this in your re.pl file:
.PP
\&\f(CW\*(C`$_REPL\->nopaste_format( \*(Aqcomment_code\*(Aq );\*(C'\fR
.PP
The default of commenting out the output would be set like this:
.PP
\&\f(CW\*(C`$_REPL\->nopaste_format( \*(Aqcomment_output\*(Aq );\*(C'\fR
.PP
These options can be set during a Devel::REPL session, but only affect
the future parts of the session, not the past parts.
.SH "AUTHOR"
.IX Header "AUTHOR"
Shawn M Moore, \f(CW\*(C`<sartak at gmail dot com>\*(C'\fR
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
.ie n .IP "Andrew Moore \- ""<amoore@cpan.org>""" 4
.el .IP "Andrew Moore \- \f(CW<amoore@cpan.org>\fR" 4
.IX Item "Andrew Moore - <amoore@cpan.org>"
