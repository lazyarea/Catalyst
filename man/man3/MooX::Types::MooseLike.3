.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "MooX::Types::MooseLike 3"
.TH MooX::Types::MooseLike 3 "2014-08-20" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooX::Types::MooseLike \- some Moosish types and a type builder
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&    package MyApp::Types;
\&    use MooX::Types::MooseLike;
\&    use base qw(Exporter);
\&    our @EXPORT_OK = ();
\&
\&    # Define some types
\&    my $defs = [{
\&      name => \*(AqMyType\*(Aq,
\&      test => sub { predicate($_[0]) },
\&      message => sub { "$_[0] is not the type we want!" }
\&    },
\&    {
\&      name => \*(AqVarChar\*(Aq,
\&      test => sub {
\&        my ($value, $param) = @_;
\&        length($value) <= $param;
\&      },
\&      message => sub { "$_[0] is too large! It should be less than or equal to $_[1]." }
\&    }];
\&
\&    # Make the types available \- this adds them to @EXPORT_OK automatically.
\&    MooX::Types::MooseLike::register_types($defs, _\|_PACKAGE_\|_);
\&
\&    ...
\&
\&    # Somewhere in code that uses the type
\&    package MyApp::Foo;
\&    use Moo;
\&    use MyApp::Types qw(MyType VarChar);
\&    has attribute => (
\&      is  => \*(Aqro\*(Aq,
\&      isa => MyType,
\&    );
\&
\&    has string => (
\&      is  => \*(Aqro\*(Aq,
\&      isa => VarChar[25]
\&    );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
See MooX::Types::MooseLike::Base for a list of available base types.  
Its source also provides an example of how to build base types, along 
with both parameterizable and non-parameterizable.
.PP
See MooX::Types::MooseLike::Numeric for an example of how to build subtypes.
.PP
See MooX::Types::SetObject for an example of how to build parameterized types.
.SH "AUTHOR"
.IX Header "AUTHOR"
mateu \- Mateu X. Hunter (cpan:MATEU) <hunter@missoula.org>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
mst \- Matt S. Trout (cpan:MSTROUT) <mst@shadowcat.co.uk>
.PP
Mithaldu \- Christian Walde (cpan:MITHALDU) <walde.christian@googlemail.com>
.PP
Matt Phillips (cpan:MATTP) <mattp@cpan.org>
.PP
Arthur Axel fREW Schmidt (cpan:FREW) <frioux@gmail.com>
.PP
Toby Inkster (cpan:TOBYINK) <tobyink@cpan.org>
.PP
Graham Knop (cpan:HAARG) <haarg@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2011\-2013 the MooX::Types::MooseLike \*(L"\s-1AUTHOR\s0\*(R" and
 \*(L"\s-1CONTRIBUTORS\s0\*(R" as listed above.
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software and may be distributed under the same terms
as perl itself.
