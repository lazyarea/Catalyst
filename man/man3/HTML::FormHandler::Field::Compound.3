.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "HTML::FormHandler::Field::Compound 3"
.TH HTML::FormHandler::Field::Compound 3 "2014-08-02" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::FormHandler::Field::Compound \- field consisting of subfields
.SH "VERSION"
.IX Header "VERSION"
version 0.40057
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This field class is designed as the base (parent) class for fields with
multiple subfields. Examples are HTML::FormHandler::Field::DateTime
and HTML::FormHandler::Field::Duration.
.PP
A compound parent class requires the use of sub-fields prepended
with the parent class name plus a dot
.PP
.Vb 4
\&   has_field \*(Aqbirthdate\*(Aq => ( type => \*(AqDateTime\*(Aq );
\&   has_field \*(Aqbirthdate.year\*(Aq => ( type => \*(AqYear\*(Aq );
\&   has_field \*(Aqbirthdate.month\*(Aq => ( type => \*(AqMonth\*(Aq );
\&   has_field \*(Aqbirthdate.day\*(Aq => ( type => \*(AqMonthDay\*(Aq);
.Ve
.PP
If all validation is performed in the parent class so that no
validation is necessary in the child classes, then the field class
\&'Nested' may be used.
.PP
The array of subfields is available in the 'fields' array in
the compound field:
.PP
.Vb 1
\&   $form\->field(\*(Aqbirthdate\*(Aq)\->fields
.Ve
.PP
Error messages will be available in the field on which the error
occurred. You can access 'error_fields' on the form or on Compound
fields (and subclasses, like Repeatable).
.PP
The process method of this field runs the process methods on the child fields
and then builds a hash of these fields values.  This hash is available for
further processing by \*(L"actions\*(R" in HTML::FormHandler::Field and the validate method.
.SS "widget"
.IX Subsection "widget"
Widget type is 'compound'
.SS "build_update_subfields"
.IX Subsection "build_update_subfields"
You can set 'defaults' or other settings in a 'build_update_subfields' method,
which contains attribute settings that will be merged with field definitions
when the fields are built. Use the 'by_flag' key with 'repeatable', 'compound',
and 'contains' subkeys, or use the 'all' key for settings which apply to all
subfields in the compound field.
.SH "AUTHOR"
.IX Header "AUTHOR"
FormHandler Contributors \- see HTML::FormHandler
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2014 by Gerda Shank.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
