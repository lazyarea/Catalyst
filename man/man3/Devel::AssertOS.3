.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Devel::AssertOS 3"
.TH Devel::AssertOS 3 "2013-01-27" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Devel::AssertOS \- require that we are running on a particular OS
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Devel::AssertOS is a utility module for Devel::CheckOS and
Devel::AssertOS::*.  It is nothing but a magic \f(CW\*(C`import()\*(C'\fR that lets you
do this:
.PP
.Vb 1
\&    use Devel::AssertOS qw(Linux FreeBSD Cygwin);
.Ve
.PP
which will die unless the platform the code is running on is Linux, FreeBSD
or Cygwin.
.PP
To assert that the \s-1OS\s0 is \fBnot\fR a specific platform, prepend the platform name
with a minus sign. For example, to run on anything but Amiga, do:
.PP
.Vb 1
\&    use Devel::AssertOS qw(\-Amiga);
.Ve
.SH "BUGS and FEEDBACK"
.IX Header "BUGS and FEEDBACK"
I welcome feedback about my code, including constructive criticism.
Bug reports should be made using <http://rt.cpan.org/> or by email.
.PP
You will need to include in your bug report the exact value of $^O, what
the \s-1OS\s0 is called (eg Windows Vista 64 bit Ultimate Home Edition), and,
if relevant, what \*(L"\s-1OS\s0 family\*(R" it should be in and who wrote it.
.PP
If you are feeling particularly generous you can encourage me in my
open source endeavours by buying me something from my wishlist:
  <http://www.cantrell.org.uk/david/wishlist/>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
$^O in perlvar
.PP
perlport
.PP
Devel::CheckOS
.PP
Devel::AssertOS::Extending
.PP
The use-devel-assertos script
.PP
Module::Install::AssertOS
.SH "AUTHOR"
.IX Header "AUTHOR"
David Cantrell <\fIdavid@cantrell.org.uk\fR>
.PP
Thanks to David Golden for suggesting that I add this utility module.
.SH "COPYRIGHT and LICENCE"
.IX Header "COPYRIGHT and LICENCE"
Copyright 2007 David Cantrell
.PP
This software is free-as-in-speech software, and may be used, distributed, and modified under the terms of either the \s-1GNU\s0 General Public Licence version 2 or the Artistic Licence. It's up to you which one you use. The full text of the licences can be found in the files \s-1GPL2\s0.txt and \s-1ARTISTIC\s0.txt, respectively.
.SH "CONSPIRACY"
.IX Header "CONSPIRACY"
This module is also free-as-in-mason software.
