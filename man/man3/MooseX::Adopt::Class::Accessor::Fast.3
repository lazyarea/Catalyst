.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "MooseX::Adopt::Class::Accessor::Fast 3"
.TH MooseX::Adopt::Class::Accessor::Fast 3 "2009-04-09" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MooseX::Adopt::Class::Accessor::Fast \-
  Hijack Class::Accessor::Fast in %INC;
.SH "SYNOPSYS"
.IX Header "SYNOPSYS"
.Vb 3
\&    use MooseX::Adopt::Class::Accessor::Fast;
\&    use CAF::Using::Module;
\&    #that\*(Aqs it! JustWorks
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module attempts to hijack Class::Accessor::Fast in \f(CW%INC\fR and replace it
with MooseX::Emulate::Class::Accessor::Fast. Make sure it is loaded before the
classes you have that use <Class::Accessor::Fast>. It is meant as a tool to help
you migrate your project from Class::Accessor::Fast, to
 MooseX::Emulate::Class::Accessor::Fast and ultimately, to Moose.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Moose, Class::Accessor::Fast, MooseX::Emulate::Class::Accessor::Fast
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "Matt S Trout" 4
.IX Item "Matt S Trout"
.PD 0
.IP "Guillermo Roditi (groditi) <groditi@cpan.org>" 4
.IX Item "Guillermo Roditi (groditi) <groditi@cpan.org>"
.PD
.SH "LICENSE"
.IX Header "LICENSE"
You may distribute this code under the same terms as Perl itself.
