.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "HTML::FormHandler::Widget::Wrapper::Bootstrap3 3"
.TH HTML::FormHandler::Widget::Wrapper::Bootstrap3 3 "2014-08-02" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::FormHandler::Widget::Wrapper::Bootstrap3 \- Twitter Bootstrap 3.0 field wrapper
.SH "VERSION"
.IX Header "VERSION"
version 0.40057
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Wrapper to implement Bootstrap 3.0 style form element rendering.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Differences from the Bootstrap 2.0 wrapper:
.PP
.Vb 5
\&   The wrapper class is \*(Aqform\-group\*(Aq instead of \*(Aqcontrol\-group\*(Aq
\&   The div wrapping the form element does not
\&       have the \*(Aqcontrols\*(Aq class. Used for sizing css classes.
\&   Input prepend & append use different classes
\&   The input elements have a \*(Aqform\-control\*(Aq class
.Ve
.PP
Tags supported:
.PP
.Vb 9
\&   label_no_filter \-\- don\*(Aqt html filter the label
\&   label_after \-\- useful for putting a colon, or other trailing formatting
\&   before_element \-\- insert tag before input, outside element\*(Aqs control div
\&   before_element_inside_div \-\- insert tag before input element, inside control div
\&   input_prepend \-\- for Bootstrap \*(Aqinput\-prepend\*(Aq class
\&   input_append \-\- for Bootstrap \*(Aqinput\-append\*(Aq class
\&   input_append_button \-\- \*(Aqinput\-append\*(Aq with button instead of span
\&   no_errors \-\- don\*(Aqt append error to field rendering
\&   after_element \-\- insert tag after input element
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
FormHandler Contributors \- see HTML::FormHandler
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2014 by Gerda Shank.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
