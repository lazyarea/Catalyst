.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Catalyst::Engine::Apache2::MP20 3"
.TH Catalyst::Engine::Apache2::MP20 3 "2010-10-05" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Catalyst::Engine::Apache2::MP20 \- Catalyst Apache2 mod_perl 2.x Engine
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    # Set up your Catalyst app as a mod_perl 2.x application in httpd.conf
\&    PerlSwitches \-I/var/www/MyApp/lib
\&
\&    # Preload your entire application
\&    PerlModule MyApp
\&
\&    <VirtualHost *>
\&        ServerName    myapp.hostname.com
\&        DocumentRoot  /var/www/MyApp/root
\&
\&        <Location />
\&            SetHandler          modperl
\&            PerlResponseHandler MyApp
\&        </Location>
\&
\&        # you can also run your app in any non\-root location
\&        <Location /some/other/path>
\&            SetHandler          perl\-script
\&            PerlResponseHandler MyApp
\&        </Location>
\&
\&        # Make sure to let Apache handle your static files
\&        # (It is not necessary to remove the Static::Simple plugin
\&        # in production; Apache will bypass Static::Simple if
\&        # configured in this way)
\&
\&        <Location /static>
\&            SetHandler          default\-handler
\&        </Location>
\&
\&        # If not running at a root location in a VirtualHost,
\&        # you\*(Aqll probably need to set an Alias to the location
\&        # of your static files, and allow access to this location:
\&
\&        Alias /myapp/static /filesystem/path/to/MyApp/root/static
\&        <Directory /filesystem/path/to/MyApp/root/static>
\&            allow from all
\&        </Directory>
\&        <Location /myapp/static>
\&            SetHandler default\-handler
\&        </Location>
\&
\&    </VirtualHost>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the Catalyst engine specialized for Apache2 mod_perl version 2.x.
.SH "ModPerl::Registry"
.IX Header "ModPerl::Registry"
While this method is not recommended, you can also run your Catalyst
application via a ModPerl::Registry script.
.PP
httpd.conf:
.PP
.Vb 2
\&    PerlModule ModPerl::Registry
\&    Alias / /var/www/MyApp/script/myapp_registry.pl/
\&
\&    <Directory /var/www/MyApp/script>
\&        Options +ExecCGI
\&    </Directory>
\&
\&    <Location />
\&        SetHandler          perl\-script
\&        PerlResponseHandler ModPerl::Registry
\&    </Location>
.Ve
.PP
script/myapp_registry.pl (you will need to create this):
.PP
.Vb 1
\&    #!/usr/bin/perl
\&
\&    use strict;
\&    use warnings;
\&    use MyApp;
\&
\&    MyApp\->handle_request( Apache2::RequestUtil\->request );
.Ve
.SH "METHODS"
.IX Header "METHODS"
.SS "ok_constant"
.IX Subsection "ok_constant"
.SH "OVERLOADED METHODS"
.IX Header "OVERLOADED METHODS"
This class overloads some methods from \f(CW\*(C`Catalyst::Engine\*(C'\fR.
.IP "unescape_uri" 4
.IX Item "unescape_uri"
.SH "OVERLOADED METHODS"
.IX Header "OVERLOADED METHODS"
This class overloads some methods from \f(CW\*(C`Catalyst::Engine\*(C'\fR.
.IP "unescape_uri" 4
.IX Item "unescape_uri"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Catalyst, Catalyst::Engine, Catalyst::Engine::Apache2.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Sebastian Riedel <sri@cpan.org>
.IP "\(bu" 4
Christian Hansen <ch@ngmedia.com>
.IP "\(bu" 4
Andy Grundman <andy@hybridized.org>
.IP "\(bu" 4
Tomas Doran <bobtfish@bobtfish.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by The \*(L"\s-1AUTHORS\s0\*(R".
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
