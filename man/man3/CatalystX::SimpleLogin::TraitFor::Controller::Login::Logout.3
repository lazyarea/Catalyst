.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "CatalystX::SimpleLogin::TraitFor::Controller::Login::Logout 3"
.TH CatalystX::SimpleLogin::TraitFor::Controller::Login::Logout 3 "2012-05-05" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CatalystX::SimpleLogin::TraitFor::Controller::Login::Logout \- log users out
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Simple controller role for logging users out. Provides a
\&\f(CW\*(C`logout\*(C'\fR action (at /logout by default) which redirects
the user to the homepage by default.
.SH "ACTIONS"
.IX Header "ACTIONS"
.SS "logout : Chained('/') PathPart('logout') \fIArgs\fP\|(0)"
.IX Subsection "logout : Chained('/') PathPart('logout') Args"
Calls \f(CW\*(C`$c\->logout\*(C'\fR, then redirects to the logout uri
retuned by \f(CW\*(C`$self\->redirect_after_logout_uri\*(C'\fR.
.SH "METHODS"
.IX Header "METHODS"
.SS "redirect_after_logout_uri"
.IX Subsection "redirect_after_logout_uri"
Returns the uri to redirect to after logout.
.PP
Defaults to \f(CW\*(C`$c\->uri_for(\*(Aq/\*(Aq);\*(C'\fR you can override this
by setting the \f(CW\*(C`<redirect_after_logout_uri\*(C'\fR> key in config
to a path to be passed to \f(CW\*(C`$c\->uri_for\*(C'\fR.
.PP
Alternatively, you can write your own redirect_after_logout_uri
in your Login controller if you are extending CatalystX::SimpleLogin
and it will override the method from this role.
.SS "do_clear_session_on_logout"
.IX Subsection "do_clear_session_on_logout"
Deletes the session after a logout.
.PP
To enable this use the following in your config:
    _\|_PACKAGE_\|_\->config('Controller::Login' => { clear_session_on_logout => 1 });
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "CatalystX::SimpleLogin::Controller::Login" 4
.IX Item "CatalystX::SimpleLogin::Controller::Login"
.SH "AUTHORS"
.IX Header "AUTHORS"
See CatalystX::SimpleLogin for authors.
.SH "LICENSE"
.IX Header "LICENSE"
See CatalystX::SimpleLogin for license.
