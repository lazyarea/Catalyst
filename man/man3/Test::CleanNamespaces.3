.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "Test::CleanNamespaces 3"
.TH Test::CleanNamespaces 3 "2014-08-29" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::CleanNamespaces \- Check for uncleaned imports
.SH "VERSION"
.IX Header "VERSION"
version 0.16
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use strict;
\&    use warnings;
\&    use Test::CleanNamespaces;
\&
\&    all_namespaces_clean;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module lets you check your module's namespaces for imported functions you
might have forgotten to remove with namespace::autoclean or
namespace::clean and are therefore available to be called as methods, which
usually isn't want you want.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
All functions are exported by default.
.SS "namespaces_clean"
.IX Subsection "namespaces_clean"
.Vb 1
\&    namespaces_clean(\*(AqYourModule\*(Aq, \*(AqAnotherModule\*(Aq);
.Ve
.PP
Tests every specified namespace for uncleaned imports. If the module couldn't
be loaded it will be skipped.
.SS "all_namespaces_clean"
.IX Subsection "all_namespaces_clean"
.Vb 1
\&    all_namespaces_clean;
.Ve
.PP
Runs \*(L"namespaces_clean\*(R" for all modules in your distribution.
.SH "METHODS"
.IX Header "METHODS"
The exported functions are constructed using the the following methods. This is
what you want to override if you're subclassing this module.
.SS "build_namespaces_clean"
.IX Subsection "build_namespaces_clean"
.Vb 1
\&    my $coderef = Test::CleanNamespaces\->build_namespaces_clean;
.Ve
.PP
Returns a coderef that will be exported as \f(CW\*(C`namespaces_clean\*(C'\fR (or the
specified sub name, if provided).
.SS "build_all_namespaces_clean"
.IX Subsection "build_all_namespaces_clean"
.Vb 1
\&    my $coderef = Test::CleanNamespaces\->build_all_namespaces_clean;
.Ve
.PP
Returns a coderef that will be exported as \f(CW\*(C`all_namespaces_clean\*(C'\fR.
(or the specified sub name, if provided).
It will use
the \f(CW\*(C`find_modules\*(C'\fR method to get the list of modules to check.
.SS "find_modules"
.IX Subsection "find_modules"
.Vb 1
\&    my @modules = Test::CleanNamespaces\->find_modules;
.Ve
.PP
Returns a list of modules in the current distribution. It'll search in
\&\f(CW\*(C`blib/\*(C'\fR, if it exists. \f(CW\*(C`lib/\*(C'\fR will be searched otherwise.
.SS "builder"
.IX Subsection "builder"
.Vb 1
\&    my $builder = Test::CleanNamespaces\->builder;
.Ve
.PP
Returns the \f(CW\*(C`Test::Builder\*(C'\fR used by the test functions.
.SH "KNOWN ISSUES"
.IX Header "KNOWN ISSUES"
Uncleaned imports from Mouse classes are incompletely detected, due to its
lack of ability to return the correct method list \*(-- it assumes that all subs
are meant to be callable as methods unless they originated from (were imported
by) one of: Mouse, Mouse::Role, Mouse::Util,
Mouse::Util::TypeConstraints, Carp, Scalar::Util, or List::Util.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\(bu" 4
namespace::clean
.IP "\(bu" 4
namespace::autoclean
.IP "\(bu" 4
namespace::sweep
.IP "\(bu" 4
Sub::Exporter::ForMethods
.IP "\(bu" 4
Test::API
.IP "\(bu" 4
Sub::Name
.IP "\(bu" 4
Sub::Install
.IP "\(bu" 4
MooseX::MarkAsMethods
.IP "\(bu" 4
Dist::Zilla::Plugin::Test::CleanNamespaces
.SH "AUTHOR"
.IX Header "AUTHOR"
Florian Ragwitz <rafl@debian.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2009 by Florian Ragwitz.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
.SH "CONTRIBUTOR"
.IX Header "CONTRIBUTOR"
Karen Etheridge <ether@cpan.org>
